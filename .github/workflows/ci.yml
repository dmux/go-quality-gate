name: CI

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.24"

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/go-build
                      ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Download dependencies
              run: go mod download

            - name: Format check
              run: |
                  if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
                    echo "Code is not formatted properly:"
                    gofmt -s -l .
                    exit 1
                  fi

            - name: Vet
              run: go vet ./...

            - name: Run tests
              run: make test-coverage

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  file: ./coverage.out
                  flags: unittests
                  name: codecov-umbrella
                  fail_ci_if_error: false

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: test

        steps:
            - uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                  go-version: "1.24"

            - name: Cache Go modules
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/go-build
                      ~/go/pkg/mod
                  key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                  restore-keys: |
                      ${{ runner.os }}-go-

            - name: Download dependencies
              run: go mod download

            - name: Build for current platform
              run: make build

            - name: Test binary
              run: ./quality-gate -v
